syntax="proto3";
package ss;

import "disp.proto";
import "user_info.proto";
/*
Server-Server Proto
*/

//proto type
enum SS_PROTO_TYPE {
  HEART_BEAT_REQ = 0;
  HEART_BEAT_RSP = 1;
  PING_REQ = 2;
  PING_RSP = 3;
  LOGIN_REQ = 4;
  LOGIN_RSP = 5;
  LOGOUT_REQ = 6;
  LOGOUT_RSP = 7;
  REG_REQ = 8;
  REG_RSP = 9;  
  USE_DISP_PROTO = 10;  // serv <--> disp <--> serv
}

enum SS_COMMON_RESULT {
  SUCCESS = 0;
  FAILED = 1;
}


//main msg
message SSMsg {
  SS_PROTO_TYPE proto_type = 1;
  oneof msg_body {
    MsgHeartBeatReq heart_beat_req = 20;       
	MsgPingReq ping_req = 22;
	MsgPingRsp ping_rsp = 23;
	MsgLoginReq login_req = 24;
	MsgLoginRsp login_rsp = 25;
	MsgLogoutReq logout_req = 26;
	MsgLogoutRsp logout_rsp = 27;
	MsgRegReq reg_req = 28;
	MsgRegRsp reg_rsp = 29;	
	MsgDisp  msg_disp = 30;
  }  
}



/***SUB MSG***/
//heartbeat
message MsgHeartBeatReq {
  int64 ts = 1;
}

//ping
message MsgPingReq {
  int64 ts = 1;
  int64 client_key = 2;
}

message MsgPingRsp {
  int64 ts = 1;
  int64 client_key = 2;
}


//login
message MsgLoginReq { 
  int64 c_key = 20;
  string name = 21;
  string pass=22;
  string device=23;
}

enum USER_LOGIN_RET {
  LOGIN_SUCCESS = 0;
  LOGIN_EMPTY = 1;
  LOGIN_PASS = 2;
  LOGIN_ERR = 3;
  LOGIN_MULTI_ON = 4; //multi online
}

message MsgLoginRsp {
  USER_LOGIN_RET result=1;
  int64 c_key=2;
  string name=3;
  int64 uid = 4; //may empty
  UserInfo user_info=20;
  int32 online_logic=21;
}

//logout
enum USER_LOGOUT_REASON {
  LOGOUT_CLIENT_EXIT = 0; //client positive logout
  LOGOUT_CONN_CLOSED = 1; //client connection closed
  LOGOUT_SERVER_KICK_RECONN = 2; //server kickout for reconn
  LOGOUT_SERVER_KICK_BAN = 3; //server kickout for ban
  LOGOUT_CLIENT_TIMEOUT = 4; //client timeout
}


message MsgLogoutReq {
  int64 uid = 1;
  USER_LOGOUT_REASON reason = 2;
  UserInfo user_info = 3;  
}

message MsgLogoutRsp {
  int64 uid = 1;
  USER_LOGOUT_REASON reason = 2;
  string msg = 3;
}

//register
message MsgRegReq {
  int64 c_key = 20;
  string name = 21;
  string pass = 22;
  bool sex=23;
  string addr=24;
}

enum REG_RESULT {
  REG_SUCCESS = 0;
  REG_DUP_NAME = 1;
  REG_DB_ERR = 2;
}

message MsgRegRsp {
  REG_RESULT result=1;
  int64 c_key=2;
  string name=3;
}


