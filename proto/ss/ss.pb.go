// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.12.3
// source: ss.proto

package ss

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//proto type
type SS_PROTO_TYPE int32

const (
	SS_PROTO_TYPE_HEART_BEAT_REQ SS_PROTO_TYPE = 0
	SS_PROTO_TYPE_HEART_BEAT_RSP SS_PROTO_TYPE = 1
	SS_PROTO_TYPE_PING_REQ       SS_PROTO_TYPE = 2
	SS_PROTO_TYPE_PING_RSP       SS_PROTO_TYPE = 3
	SS_PROTO_TYPE_LOGIN_REQ      SS_PROTO_TYPE = 4
	SS_PROTO_TYPE_LOGIN_RSP      SS_PROTO_TYPE = 5
	SS_PROTO_TYPE_LOGOUT_REQ     SS_PROTO_TYPE = 6
	SS_PROTO_TYPE_LOGOUT_RSP     SS_PROTO_TYPE = 7
	SS_PROTO_TYPE_REG_REQ        SS_PROTO_TYPE = 8
	SS_PROTO_TYPE_REG_RSP        SS_PROTO_TYPE = 9
	SS_PROTO_TYPE_USE_DISP_PROTO SS_PROTO_TYPE = 10 // serv <--> disp <--> serv
)

// Enum value maps for SS_PROTO_TYPE.
var (
	SS_PROTO_TYPE_name = map[int32]string{
		0:  "HEART_BEAT_REQ",
		1:  "HEART_BEAT_RSP",
		2:  "PING_REQ",
		3:  "PING_RSP",
		4:  "LOGIN_REQ",
		5:  "LOGIN_RSP",
		6:  "LOGOUT_REQ",
		7:  "LOGOUT_RSP",
		8:  "REG_REQ",
		9:  "REG_RSP",
		10: "USE_DISP_PROTO",
	}
	SS_PROTO_TYPE_value = map[string]int32{
		"HEART_BEAT_REQ": 0,
		"HEART_BEAT_RSP": 1,
		"PING_REQ":       2,
		"PING_RSP":       3,
		"LOGIN_REQ":      4,
		"LOGIN_RSP":      5,
		"LOGOUT_REQ":     6,
		"LOGOUT_RSP":     7,
		"REG_REQ":        8,
		"REG_RSP":        9,
		"USE_DISP_PROTO": 10,
	}
)

func (x SS_PROTO_TYPE) Enum() *SS_PROTO_TYPE {
	p := new(SS_PROTO_TYPE)
	*p = x
	return p
}

func (x SS_PROTO_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SS_PROTO_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_ss_proto_enumTypes[0].Descriptor()
}

func (SS_PROTO_TYPE) Type() protoreflect.EnumType {
	return &file_ss_proto_enumTypes[0]
}

func (x SS_PROTO_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SS_PROTO_TYPE.Descriptor instead.
func (SS_PROTO_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_ss_proto_rawDescGZIP(), []int{0}
}

type SS_COMMON_RESULT int32

const (
	SS_COMMON_RESULT_SUCCESS SS_COMMON_RESULT = 0
	SS_COMMON_RESULT_FAILED  SS_COMMON_RESULT = 1
)

// Enum value maps for SS_COMMON_RESULT.
var (
	SS_COMMON_RESULT_name = map[int32]string{
		0: "SUCCESS",
		1: "FAILED",
	}
	SS_COMMON_RESULT_value = map[string]int32{
		"SUCCESS": 0,
		"FAILED":  1,
	}
)

func (x SS_COMMON_RESULT) Enum() *SS_COMMON_RESULT {
	p := new(SS_COMMON_RESULT)
	*p = x
	return p
}

func (x SS_COMMON_RESULT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SS_COMMON_RESULT) Descriptor() protoreflect.EnumDescriptor {
	return file_ss_proto_enumTypes[1].Descriptor()
}

func (SS_COMMON_RESULT) Type() protoreflect.EnumType {
	return &file_ss_proto_enumTypes[1]
}

func (x SS_COMMON_RESULT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SS_COMMON_RESULT.Descriptor instead.
func (SS_COMMON_RESULT) EnumDescriptor() ([]byte, []int) {
	return file_ss_proto_rawDescGZIP(), []int{1}
}

type USER_LOGIN_RET int32

const (
	USER_LOGIN_RET_LOGIN_SUCCESS  USER_LOGIN_RET = 0
	USER_LOGIN_RET_LOGIN_EMPTY    USER_LOGIN_RET = 1
	USER_LOGIN_RET_LOGIN_PASS     USER_LOGIN_RET = 2
	USER_LOGIN_RET_LOGIN_ERR      USER_LOGIN_RET = 3
	USER_LOGIN_RET_LOGIN_MULTI_ON USER_LOGIN_RET = 4 //multi online
)

// Enum value maps for USER_LOGIN_RET.
var (
	USER_LOGIN_RET_name = map[int32]string{
		0: "LOGIN_SUCCESS",
		1: "LOGIN_EMPTY",
		2: "LOGIN_PASS",
		3: "LOGIN_ERR",
		4: "LOGIN_MULTI_ON",
	}
	USER_LOGIN_RET_value = map[string]int32{
		"LOGIN_SUCCESS":  0,
		"LOGIN_EMPTY":    1,
		"LOGIN_PASS":     2,
		"LOGIN_ERR":      3,
		"LOGIN_MULTI_ON": 4,
	}
)

func (x USER_LOGIN_RET) Enum() *USER_LOGIN_RET {
	p := new(USER_LOGIN_RET)
	*p = x
	return p
}

func (x USER_LOGIN_RET) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (USER_LOGIN_RET) Descriptor() protoreflect.EnumDescriptor {
	return file_ss_proto_enumTypes[2].Descriptor()
}

func (USER_LOGIN_RET) Type() protoreflect.EnumType {
	return &file_ss_proto_enumTypes[2]
}

func (x USER_LOGIN_RET) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use USER_LOGIN_RET.Descriptor instead.
func (USER_LOGIN_RET) EnumDescriptor() ([]byte, []int) {
	return file_ss_proto_rawDescGZIP(), []int{2}
}

//logout
type USER_LOGOUT_REASON int32

const (
	USER_LOGOUT_REASON_LOGOUT_CLIENT_EXIT        USER_LOGOUT_REASON = 0 //client positive logout
	USER_LOGOUT_REASON_LOGOUT_CONN_CLOSED        USER_LOGOUT_REASON = 1 //client connection closed
	USER_LOGOUT_REASON_LOGOUT_SERVER_KICK_RECONN USER_LOGOUT_REASON = 2 //server kickout for reconn
	USER_LOGOUT_REASON_LOGOUT_SERVER_KICK_BAN    USER_LOGOUT_REASON = 3 //server kickout for ban
	USER_LOGOUT_REASON_LOGOUT_CLIENT_TIMEOUT     USER_LOGOUT_REASON = 4 //client timeout
	USER_LOGOUT_REASON_LOGOUT_OFFLINE_USER       USER_LOGOUT_REASON = 5 //user off-line still logout update online-logic
)

// Enum value maps for USER_LOGOUT_REASON.
var (
	USER_LOGOUT_REASON_name = map[int32]string{
		0: "LOGOUT_CLIENT_EXIT",
		1: "LOGOUT_CONN_CLOSED",
		2: "LOGOUT_SERVER_KICK_RECONN",
		3: "LOGOUT_SERVER_KICK_BAN",
		4: "LOGOUT_CLIENT_TIMEOUT",
		5: "LOGOUT_OFFLINE_USER",
	}
	USER_LOGOUT_REASON_value = map[string]int32{
		"LOGOUT_CLIENT_EXIT":        0,
		"LOGOUT_CONN_CLOSED":        1,
		"LOGOUT_SERVER_KICK_RECONN": 2,
		"LOGOUT_SERVER_KICK_BAN":    3,
		"LOGOUT_CLIENT_TIMEOUT":     4,
		"LOGOUT_OFFLINE_USER":       5,
	}
)

func (x USER_LOGOUT_REASON) Enum() *USER_LOGOUT_REASON {
	p := new(USER_LOGOUT_REASON)
	*p = x
	return p
}

func (x USER_LOGOUT_REASON) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (USER_LOGOUT_REASON) Descriptor() protoreflect.EnumDescriptor {
	return file_ss_proto_enumTypes[3].Descriptor()
}

func (USER_LOGOUT_REASON) Type() protoreflect.EnumType {
	return &file_ss_proto_enumTypes[3]
}

func (x USER_LOGOUT_REASON) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use USER_LOGOUT_REASON.Descriptor instead.
func (USER_LOGOUT_REASON) EnumDescriptor() ([]byte, []int) {
	return file_ss_proto_rawDescGZIP(), []int{3}
}

type REG_RESULT int32

const (
	REG_RESULT_REG_SUCCESS  REG_RESULT = 0
	REG_RESULT_REG_DUP_NAME REG_RESULT = 1
	REG_RESULT_REG_DB_ERR   REG_RESULT = 2
)

// Enum value maps for REG_RESULT.
var (
	REG_RESULT_name = map[int32]string{
		0: "REG_SUCCESS",
		1: "REG_DUP_NAME",
		2: "REG_DB_ERR",
	}
	REG_RESULT_value = map[string]int32{
		"REG_SUCCESS":  0,
		"REG_DUP_NAME": 1,
		"REG_DB_ERR":   2,
	}
)

func (x REG_RESULT) Enum() *REG_RESULT {
	p := new(REG_RESULT)
	*p = x
	return p
}

func (x REG_RESULT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (REG_RESULT) Descriptor() protoreflect.EnumDescriptor {
	return file_ss_proto_enumTypes[4].Descriptor()
}

func (REG_RESULT) Type() protoreflect.EnumType {
	return &file_ss_proto_enumTypes[4]
}

func (x REG_RESULT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use REG_RESULT.Descriptor instead.
func (REG_RESULT) EnumDescriptor() ([]byte, []int) {
	return file_ss_proto_rawDescGZIP(), []int{4}
}

//main msg
type SSMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtoType SS_PROTO_TYPE `protobuf:"varint,1,opt,name=proto_type,json=protoType,proto3,enum=ss.SS_PROTO_TYPE" json:"proto_type,omitempty"`
	// Types that are assignable to MsgBody:
	//	*SSMsg_HeartBeatReq
	//	*SSMsg_PingReq
	//	*SSMsg_PingRsp
	//	*SSMsg_LoginReq
	//	*SSMsg_LoginRsp
	//	*SSMsg_LogoutReq
	//	*SSMsg_LogoutRsp
	//	*SSMsg_RegReq
	//	*SSMsg_RegRsp
	//	*SSMsg_MsgDisp
	MsgBody isSSMsg_MsgBody `protobuf_oneof:"msg_body"`
}

func (x *SSMsg) Reset() {
	*x = SSMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSMsg) ProtoMessage() {}

func (x *SSMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ss_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSMsg.ProtoReflect.Descriptor instead.
func (*SSMsg) Descriptor() ([]byte, []int) {
	return file_ss_proto_rawDescGZIP(), []int{0}
}

func (x *SSMsg) GetProtoType() SS_PROTO_TYPE {
	if x != nil {
		return x.ProtoType
	}
	return SS_PROTO_TYPE_HEART_BEAT_REQ
}

func (m *SSMsg) GetMsgBody() isSSMsg_MsgBody {
	if m != nil {
		return m.MsgBody
	}
	return nil
}

func (x *SSMsg) GetHeartBeatReq() *MsgHeartBeatReq {
	if x, ok := x.GetMsgBody().(*SSMsg_HeartBeatReq); ok {
		return x.HeartBeatReq
	}
	return nil
}

func (x *SSMsg) GetPingReq() *MsgPingReq {
	if x, ok := x.GetMsgBody().(*SSMsg_PingReq); ok {
		return x.PingReq
	}
	return nil
}

func (x *SSMsg) GetPingRsp() *MsgPingRsp {
	if x, ok := x.GetMsgBody().(*SSMsg_PingRsp); ok {
		return x.PingRsp
	}
	return nil
}

func (x *SSMsg) GetLoginReq() *MsgLoginReq {
	if x, ok := x.GetMsgBody().(*SSMsg_LoginReq); ok {
		return x.LoginReq
	}
	return nil
}

func (x *SSMsg) GetLoginRsp() *MsgLoginRsp {
	if x, ok := x.GetMsgBody().(*SSMsg_LoginRsp); ok {
		return x.LoginRsp
	}
	return nil
}

func (x *SSMsg) GetLogoutReq() *MsgLogoutReq {
	if x, ok := x.GetMsgBody().(*SSMsg_LogoutReq); ok {
		return x.LogoutReq
	}
	return nil
}

func (x *SSMsg) GetLogoutRsp() *MsgLogoutRsp {
	if x, ok := x.GetMsgBody().(*SSMsg_LogoutRsp); ok {
		return x.LogoutRsp
	}
	return nil
}

func (x *SSMsg) GetRegReq() *MsgRegReq {
	if x, ok := x.GetMsgBody().(*SSMsg_RegReq); ok {
		return x.RegReq
	}
	return nil
}

func (x *SSMsg) GetRegRsp() *MsgRegRsp {
	if x, ok := x.GetMsgBody().(*SSMsg_RegRsp); ok {
		return x.RegRsp
	}
	return nil
}

func (x *SSMsg) GetMsgDisp() *MsgDisp {
	if x, ok := x.GetMsgBody().(*SSMsg_MsgDisp); ok {
		return x.MsgDisp
	}
	return nil
}

type isSSMsg_MsgBody interface {
	isSSMsg_MsgBody()
}

type SSMsg_HeartBeatReq struct {
	HeartBeatReq *MsgHeartBeatReq `protobuf:"bytes,20,opt,name=heart_beat_req,json=heartBeatReq,proto3,oneof"`
}

type SSMsg_PingReq struct {
	PingReq *MsgPingReq `protobuf:"bytes,22,opt,name=ping_req,json=pingReq,proto3,oneof"`
}

type SSMsg_PingRsp struct {
	PingRsp *MsgPingRsp `protobuf:"bytes,23,opt,name=ping_rsp,json=pingRsp,proto3,oneof"`
}

type SSMsg_LoginReq struct {
	LoginReq *MsgLoginReq `protobuf:"bytes,24,opt,name=login_req,json=loginReq,proto3,oneof"`
}

type SSMsg_LoginRsp struct {
	LoginRsp *MsgLoginRsp `protobuf:"bytes,25,opt,name=login_rsp,json=loginRsp,proto3,oneof"`
}

type SSMsg_LogoutReq struct {
	LogoutReq *MsgLogoutReq `protobuf:"bytes,26,opt,name=logout_req,json=logoutReq,proto3,oneof"`
}

type SSMsg_LogoutRsp struct {
	LogoutRsp *MsgLogoutRsp `protobuf:"bytes,27,opt,name=logout_rsp,json=logoutRsp,proto3,oneof"`
}

type SSMsg_RegReq struct {
	RegReq *MsgRegReq `protobuf:"bytes,28,opt,name=reg_req,json=regReq,proto3,oneof"`
}

type SSMsg_RegRsp struct {
	RegRsp *MsgRegRsp `protobuf:"bytes,29,opt,name=reg_rsp,json=regRsp,proto3,oneof"`
}

type SSMsg_MsgDisp struct {
	MsgDisp *MsgDisp `protobuf:"bytes,30,opt,name=msg_disp,json=msgDisp,proto3,oneof"`
}

func (*SSMsg_HeartBeatReq) isSSMsg_MsgBody() {}

func (*SSMsg_PingReq) isSSMsg_MsgBody() {}

func (*SSMsg_PingRsp) isSSMsg_MsgBody() {}

func (*SSMsg_LoginReq) isSSMsg_MsgBody() {}

func (*SSMsg_LoginRsp) isSSMsg_MsgBody() {}

func (*SSMsg_LogoutReq) isSSMsg_MsgBody() {}

func (*SSMsg_LogoutRsp) isSSMsg_MsgBody() {}

func (*SSMsg_RegReq) isSSMsg_MsgBody() {}

func (*SSMsg_RegRsp) isSSMsg_MsgBody() {}

func (*SSMsg_MsgDisp) isSSMsg_MsgBody() {}

//heartbeat
type MsgHeartBeatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts int64 `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
}

func (x *MsgHeartBeatReq) Reset() {
	*x = MsgHeartBeatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgHeartBeatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgHeartBeatReq) ProtoMessage() {}

func (x *MsgHeartBeatReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgHeartBeatReq.ProtoReflect.Descriptor instead.
func (*MsgHeartBeatReq) Descriptor() ([]byte, []int) {
	return file_ss_proto_rawDescGZIP(), []int{1}
}

func (x *MsgHeartBeatReq) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

//ping
type MsgPingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts        int64 `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	ClientKey int64 `protobuf:"varint,2,opt,name=client_key,json=clientKey,proto3" json:"client_key,omitempty"`
}

func (x *MsgPingReq) Reset() {
	*x = MsgPingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgPingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPingReq) ProtoMessage() {}

func (x *MsgPingReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgPingReq.ProtoReflect.Descriptor instead.
func (*MsgPingReq) Descriptor() ([]byte, []int) {
	return file_ss_proto_rawDescGZIP(), []int{2}
}

func (x *MsgPingReq) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *MsgPingReq) GetClientKey() int64 {
	if x != nil {
		return x.ClientKey
	}
	return 0
}

type MsgPingRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts        int64 `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	ClientKey int64 `protobuf:"varint,2,opt,name=client_key,json=clientKey,proto3" json:"client_key,omitempty"`
}

func (x *MsgPingRsp) Reset() {
	*x = MsgPingRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgPingRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPingRsp) ProtoMessage() {}

func (x *MsgPingRsp) ProtoReflect() protoreflect.Message {
	mi := &file_ss_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgPingRsp.ProtoReflect.Descriptor instead.
func (*MsgPingRsp) Descriptor() ([]byte, []int) {
	return file_ss_proto_rawDescGZIP(), []int{3}
}

func (x *MsgPingRsp) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *MsgPingRsp) GetClientKey() int64 {
	if x != nil {
		return x.ClientKey
	}
	return 0
}

//login
type MsgLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CKey   int64  `protobuf:"varint,20,opt,name=c_key,json=cKey,proto3" json:"c_key,omitempty"`
	Uid    int64  `protobuf:"varint,21,opt,name=uid,proto3" json:"uid,omitempty"`  //0 use default role
	Name   string `protobuf:"bytes,22,opt,name=name,proto3" json:"name,omitempty"` //acc name
	Pass   string `protobuf:"bytes,23,opt,name=pass,proto3" json:"pass,omitempty"`
	Device string `protobuf:"bytes,24,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *MsgLoginReq) Reset() {
	*x = MsgLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgLoginReq) ProtoMessage() {}

func (x *MsgLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgLoginReq.ProtoReflect.Descriptor instead.
func (*MsgLoginReq) Descriptor() ([]byte, []int) {
	return file_ss_proto_rawDescGZIP(), []int{4}
}

func (x *MsgLoginReq) GetCKey() int64 {
	if x != nil {
		return x.CKey
	}
	return 0
}

func (x *MsgLoginReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MsgLoginReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgLoginReq) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *MsgLoginReq) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

type MsgLoginRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      USER_LOGIN_RET `protobuf:"varint,1,opt,name=result,proto3,enum=ss.USER_LOGIN_RET" json:"result,omitempty"`
	CKey        int64          `protobuf:"varint,2,opt,name=c_key,json=cKey,proto3" json:"c_key,omitempty"`
	Name        string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"` //account name
	Uid         int64          `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`  //may empty
	UserInfo    *UserInfo      `protobuf:"bytes,20,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	OnlineLogic int32          `protobuf:"varint,21,opt,name=online_logic,json=onlineLogic,proto3" json:"online_logic,omitempty"`
}

func (x *MsgLoginRsp) Reset() {
	*x = MsgLoginRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgLoginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgLoginRsp) ProtoMessage() {}

func (x *MsgLoginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_ss_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgLoginRsp.ProtoReflect.Descriptor instead.
func (*MsgLoginRsp) Descriptor() ([]byte, []int) {
	return file_ss_proto_rawDescGZIP(), []int{5}
}

func (x *MsgLoginRsp) GetResult() USER_LOGIN_RET {
	if x != nil {
		return x.Result
	}
	return USER_LOGIN_RET_LOGIN_SUCCESS
}

func (x *MsgLoginRsp) GetCKey() int64 {
	if x != nil {
		return x.CKey
	}
	return 0
}

func (x *MsgLoginRsp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgLoginRsp) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MsgLoginRsp) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *MsgLoginRsp) GetOnlineLogic() int32 {
	if x != nil {
		return x.OnlineLogic
	}
	return 0
}

type MsgLogoutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      int64              `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Reason   USER_LOGOUT_REASON `protobuf:"varint,2,opt,name=reason,proto3,enum=ss.USER_LOGOUT_REASON" json:"reason,omitempty"`
	UserInfo *UserInfo          `protobuf:"bytes,3,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
}

func (x *MsgLogoutReq) Reset() {
	*x = MsgLogoutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgLogoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgLogoutReq) ProtoMessage() {}

func (x *MsgLogoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgLogoutReq.ProtoReflect.Descriptor instead.
func (*MsgLogoutReq) Descriptor() ([]byte, []int) {
	return file_ss_proto_rawDescGZIP(), []int{6}
}

func (x *MsgLogoutReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MsgLogoutReq) GetReason() USER_LOGOUT_REASON {
	if x != nil {
		return x.Reason
	}
	return USER_LOGOUT_REASON_LOGOUT_CLIENT_EXIT
}

func (x *MsgLogoutReq) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type MsgLogoutRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    int64              `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Reason USER_LOGOUT_REASON `protobuf:"varint,2,opt,name=reason,proto3,enum=ss.USER_LOGOUT_REASON" json:"reason,omitempty"`
	Msg    string             `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *MsgLogoutRsp) Reset() {
	*x = MsgLogoutRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgLogoutRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgLogoutRsp) ProtoMessage() {}

func (x *MsgLogoutRsp) ProtoReflect() protoreflect.Message {
	mi := &file_ss_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgLogoutRsp.ProtoReflect.Descriptor instead.
func (*MsgLogoutRsp) Descriptor() ([]byte, []int) {
	return file_ss_proto_rawDescGZIP(), []int{7}
}

func (x *MsgLogoutRsp) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MsgLogoutRsp) GetReason() USER_LOGOUT_REASON {
	if x != nil {
		return x.Reason
	}
	return USER_LOGOUT_REASON_LOGOUT_CLIENT_EXIT
}

func (x *MsgLogoutRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

//register
type MsgRegReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CKey int64  `protobuf:"varint,20,opt,name=c_key,json=cKey,proto3" json:"c_key,omitempty"`
	Name string `protobuf:"bytes,21,opt,name=name,proto3" json:"name,omitempty"`
	Pass string `protobuf:"bytes,22,opt,name=pass,proto3" json:"pass,omitempty"`
	Sex  bool   `protobuf:"varint,23,opt,name=sex,proto3" json:"sex,omitempty"`
	Addr string `protobuf:"bytes,24,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *MsgRegReq) Reset() {
	*x = MsgRegReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRegReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRegReq) ProtoMessage() {}

func (x *MsgRegReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRegReq.ProtoReflect.Descriptor instead.
func (*MsgRegReq) Descriptor() ([]byte, []int) {
	return file_ss_proto_rawDescGZIP(), []int{8}
}

func (x *MsgRegReq) GetCKey() int64 {
	if x != nil {
		return x.CKey
	}
	return 0
}

func (x *MsgRegReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgRegReq) GetPass() string {
	if x != nil {
		return x.Pass
	}
	return ""
}

func (x *MsgRegReq) GetSex() bool {
	if x != nil {
		return x.Sex
	}
	return false
}

func (x *MsgRegReq) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type MsgRegRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result REG_RESULT `protobuf:"varint,1,opt,name=result,proto3,enum=ss.REG_RESULT" json:"result,omitempty"`
	CKey   int64      `protobuf:"varint,2,opt,name=c_key,json=cKey,proto3" json:"c_key,omitempty"`
	Name   string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MsgRegRsp) Reset() {
	*x = MsgRegRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRegRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRegRsp) ProtoMessage() {}

func (x *MsgRegRsp) ProtoReflect() protoreflect.Message {
	mi := &file_ss_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRegRsp.ProtoReflect.Descriptor instead.
func (*MsgRegRsp) Descriptor() ([]byte, []int) {
	return file_ss_proto_rawDescGZIP(), []int{9}
}

func (x *MsgRegRsp) GetResult() REG_RESULT {
	if x != nil {
		return x.Result
	}
	return REG_RESULT_REG_SUCCESS
}

func (x *MsgRegRsp) GetCKey() int64 {
	if x != nil {
		return x.CKey
	}
	return 0
}

func (x *MsgRegRsp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_ss_proto protoreflect.FileDescriptor

var file_ss_proto_rawDesc = []byte{
	0x0a, 0x08, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x73, 0x73, 0x1a, 0x0a,
	0x64, 0x69, 0x73, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x04, 0x0a, 0x05,
	0x53, 0x53, 0x4d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x73, 0x73, 0x2e, 0x53,
	0x53, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x68, 0x65, 0x61, 0x72, 0x74,
	0x5f, 0x62, 0x65, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x73, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x07, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x73, 0x70, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x73, 0x70, 0x48, 0x00, 0x52, 0x07, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x73, 0x70, 0x12, 0x2e,
	0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x2e,
	0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x73, 0x70, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x31,
	0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x31, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x73, 0x70, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x52, 0x73, 0x70, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x52, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x67, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x67, 0x52, 0x65, 0x71, 0x12, 0x28,
	0x0a, 0x07, 0x72, 0x65, 0x67, 0x5f, 0x72, 0x73, 0x70, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x73, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x52, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x06, 0x72, 0x65, 0x67, 0x52, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f,
	0x64, 0x69, 0x73, 0x70, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x73, 0x2e,
	0x4d, 0x73, 0x67, 0x44, 0x69, 0x73, 0x70, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x44, 0x69,
	0x73, 0x70, 0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x21,
	0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74,
	0x73, 0x22, 0x3b, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x3b,
	0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x74, 0x0a, 0x0b, 0x4d,
	0x73, 0x67, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x05, 0x63, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x22, 0xc2, 0x01, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73,
	0x70, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x73, 0x73, 0x2e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x49,
	0x4e, 0x5f, 0x52, 0x45, 0x54, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x13, 0x0a,
	0x05, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x22, 0x7b, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67,
	0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x73, 0x2e, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x62, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x73, 0x2e, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x6e, 0x0a, 0x09, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x05, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03,
	0x73, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22, 0x5c, 0x0a, 0x09, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x67, 0x52, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x73, 0x73, 0x2e, 0x52, 0x45, 0x47, 0x5f, 0x52, 0x45,
	0x53, 0x55, 0x4c, 0x54, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x13, 0x0a, 0x05,
	0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x2a, 0xbf, 0x01, 0x0a, 0x0d, 0x53, 0x53, 0x5f, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x12, 0x0a, 0x0e, 0x48, 0x45, 0x41, 0x52, 0x54,
	0x5f, 0x42, 0x45, 0x41, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x48,
	0x45, 0x41, 0x52, 0x54, 0x5f, 0x42, 0x45, 0x41, 0x54, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x02, 0x12, 0x0c, 0x0a,
	0x08, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x4c,
	0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x4f,
	0x47, 0x49, 0x4e, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x4f, 0x47,
	0x4f, 0x55, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x4f, 0x47,
	0x4f, 0x55, 0x54, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x47,
	0x5f, 0x52, 0x45, 0x51, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x47, 0x5f, 0x52, 0x53,
	0x50, 0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x10, 0x0a, 0x2a, 0x2b, 0x0a, 0x10, 0x53, 0x53, 0x5f, 0x43, 0x4f,
	0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x01, 0x2a, 0x67, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47,
	0x49, 0x4e, 0x5f, 0x52, 0x45, 0x54, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x4f, 0x47,
	0x49, 0x4e, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x4f,
	0x47, 0x49, 0x4e, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x4f,
	0x47, 0x49, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x4f, 0x47,
	0x49, 0x4e, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x5f, 0x4f, 0x4e, 0x10, 0x04, 0x2a, 0xb3, 0x01,
	0x0a, 0x12, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x5f, 0x52, 0x45,
	0x41, 0x53, 0x4f, 0x4e, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x5f, 0x43,
	0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12,
	0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x5f, 0x43, 0x4c, 0x4f, 0x53,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x5f, 0x53,
	0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x4b, 0x49, 0x43, 0x4b, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4e,
	0x4e, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x45, 0x52, 0x5f, 0x4b, 0x49, 0x43, 0x4b, 0x5f, 0x42, 0x41, 0x4e, 0x10, 0x03, 0x12,
	0x19, 0x0a, 0x15, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x4f,
	0x47, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x10, 0x05, 0x2a, 0x3f, 0x0a, 0x0a, 0x52, 0x45, 0x47, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c,
	0x54, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x47, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x45, 0x47, 0x5f, 0x44, 0x55, 0x50, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x47, 0x5f, 0x44, 0x42, 0x5f, 0x45,
	0x52, 0x52, 0x10, 0x02, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ss_proto_rawDescOnce sync.Once
	file_ss_proto_rawDescData = file_ss_proto_rawDesc
)

func file_ss_proto_rawDescGZIP() []byte {
	file_ss_proto_rawDescOnce.Do(func() {
		file_ss_proto_rawDescData = protoimpl.X.CompressGZIP(file_ss_proto_rawDescData)
	})
	return file_ss_proto_rawDescData
}

var file_ss_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_ss_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_ss_proto_goTypes = []interface{}{
	(SS_PROTO_TYPE)(0),      // 0: ss.SS_PROTO_TYPE
	(SS_COMMON_RESULT)(0),   // 1: ss.SS_COMMON_RESULT
	(USER_LOGIN_RET)(0),     // 2: ss.USER_LOGIN_RET
	(USER_LOGOUT_REASON)(0), // 3: ss.USER_LOGOUT_REASON
	(REG_RESULT)(0),         // 4: ss.REG_RESULT
	(*SSMsg)(nil),           // 5: ss.SSMsg
	(*MsgHeartBeatReq)(nil), // 6: ss.MsgHeartBeatReq
	(*MsgPingReq)(nil),      // 7: ss.MsgPingReq
	(*MsgPingRsp)(nil),      // 8: ss.MsgPingRsp
	(*MsgLoginReq)(nil),     // 9: ss.MsgLoginReq
	(*MsgLoginRsp)(nil),     // 10: ss.MsgLoginRsp
	(*MsgLogoutReq)(nil),    // 11: ss.MsgLogoutReq
	(*MsgLogoutRsp)(nil),    // 12: ss.MsgLogoutRsp
	(*MsgRegReq)(nil),       // 13: ss.MsgRegReq
	(*MsgRegRsp)(nil),       // 14: ss.MsgRegRsp
	(*MsgDisp)(nil),         // 15: ss.MsgDisp
	(*UserInfo)(nil),        // 16: ss.UserInfo
}
var file_ss_proto_depIdxs = []int32{
	0,  // 0: ss.SSMsg.proto_type:type_name -> ss.SS_PROTO_TYPE
	6,  // 1: ss.SSMsg.heart_beat_req:type_name -> ss.MsgHeartBeatReq
	7,  // 2: ss.SSMsg.ping_req:type_name -> ss.MsgPingReq
	8,  // 3: ss.SSMsg.ping_rsp:type_name -> ss.MsgPingRsp
	9,  // 4: ss.SSMsg.login_req:type_name -> ss.MsgLoginReq
	10, // 5: ss.SSMsg.login_rsp:type_name -> ss.MsgLoginRsp
	11, // 6: ss.SSMsg.logout_req:type_name -> ss.MsgLogoutReq
	12, // 7: ss.SSMsg.logout_rsp:type_name -> ss.MsgLogoutRsp
	13, // 8: ss.SSMsg.reg_req:type_name -> ss.MsgRegReq
	14, // 9: ss.SSMsg.reg_rsp:type_name -> ss.MsgRegRsp
	15, // 10: ss.SSMsg.msg_disp:type_name -> ss.MsgDisp
	2,  // 11: ss.MsgLoginRsp.result:type_name -> ss.USER_LOGIN_RET
	16, // 12: ss.MsgLoginRsp.user_info:type_name -> ss.UserInfo
	3,  // 13: ss.MsgLogoutReq.reason:type_name -> ss.USER_LOGOUT_REASON
	16, // 14: ss.MsgLogoutReq.user_info:type_name -> ss.UserInfo
	3,  // 15: ss.MsgLogoutRsp.reason:type_name -> ss.USER_LOGOUT_REASON
	4,  // 16: ss.MsgRegRsp.result:type_name -> ss.REG_RESULT
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_ss_proto_init() }
func file_ss_proto_init() {
	if File_ss_proto != nil {
		return
	}
	file_disp_proto_init()
	file_user_info_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ss_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgHeartBeatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgPingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgPingRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgLoginRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgLogoutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgLogoutRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRegReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRegRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ss_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*SSMsg_HeartBeatReq)(nil),
		(*SSMsg_PingReq)(nil),
		(*SSMsg_PingRsp)(nil),
		(*SSMsg_LoginReq)(nil),
		(*SSMsg_LoginRsp)(nil),
		(*SSMsg_LogoutReq)(nil),
		(*SSMsg_LogoutRsp)(nil),
		(*SSMsg_RegReq)(nil),
		(*SSMsg_RegRsp)(nil),
		(*SSMsg_MsgDisp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ss_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ss_proto_goTypes,
		DependencyIndexes: file_ss_proto_depIdxs,
		EnumInfos:         file_ss_proto_enumTypes,
		MessageInfos:      file_ss_proto_msgTypes,
	}.Build()
	File_ss_proto = out.File
	file_ss_proto_rawDesc = nil
	file_ss_proto_goTypes = nil
	file_ss_proto_depIdxs = nil
}
